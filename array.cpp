#include <iostream>
using namespace std;

/******************************************************************************
* 数组
******************************************************************************/
void arrayPrint()
{
	unsigned cnt = 42; // 不是常量表达式
	constexpr unsigned sz = 3; //常量表达式
	int arr[10]; // 含有 10 个整数的数组 
	int* parr[sz];// 含有 42 个 整型指针的数组
	//string bad[cnt]; //错误；cnt 不是常量表达式
	string strs[sz]; // 常量表达式可以

	// 数组初始化
	int ial[sz] = { 0,1,2 }; //含有 3 个元素的数组，元素值分别是 0，1，2
	int a2[] = { 0,1,2 }; // 维度是 3 的数组
	int a3[5] = { 0,1,2 }; // 等价于 a3[] = { 0,1,2,0,0 }
	string a4[3] = { "Hello","World" }; // 等价于 a4[] = { "Hello","World",""}
	// int a5[2] = { 0,1,2 };//错误，初始值过多

	char a6[] = { 'C','+','+' }; //列表初始化，没有空字符
	char a7[] = { 'C','+','+','\0' }; // 列表初始化，含有显示的空字符
	char a8[] = "C++"; //自动添加表示空字符串结束的空字符
	//const char a9[6] = "Daniel"; // 错误；没有空间可存放空字符
	cout << "a6:" << strlen(a6) << ";a7:" << strlen(a7) << ";a8:" << strlen(a8) << endl;

	//int a10 = a[8]; // 错误：不能把一个数组初始化给另一个数组
	//a7 = a6; // 错误：不能把一个数组直接赋值给另一个数组

	int* ptrs[10]; // ptrs 是含有 10 个整型指针的数组
	//int& refs[10]=/* ? */; // 错误：不存在引用的数组
	int(*Parray)[10] = &arr; // Parray 指向一个含有 10 个整数的数组
	int(&arRef)[10] = arr; // arrRef 引用一个含有 10 个整数的数组

}